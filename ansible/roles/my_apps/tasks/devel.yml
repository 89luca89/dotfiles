---
# tasks file for my_apps

- name: Install Programs (Programming Packages)
  package:
    state: latest
    name: "{{ terminal_packages }}"
  become: true
  tags: term_pkg

- name: Install Programs (clang)
  package:
    state: latest
    name: "{{ clang_packages }}"
  become: true
  tags: clang

- name: Install Programs (python)
  package:
    state: latest
    name: "{{ python_packages }}"
  become: true
  tags: python

- name: Install Programs (PIP Packages) - pip
  pip:
    state: latest
    executable: pip3
    name: "{{ python_modules }}"
  become: true
  tags: python

- name: Install Programs (golang)
  package:
    state: latest
    name: "{{ golang_packages }}"
  become: true
  tags: golang

- name: Check that golang exists
  stat:
    path: "{{ ansible_env.HOME }}/.local/go/bin/gopls"
  register: golang
  tags: golang

- name: Install Programs (Programming Packages) - golang
  command: "go get -u {{ item }}"
  with_items: "{{ golang_modules }}"
  environment:
    GOPATH: "{{ ansible_env.HOME }}/.local/go"
  when: not golang.stat.exists
  tags: golang

- name: Install Programs (Programming Packages) - golangci-lint
  shell: |
    curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.27.0
  environment:
    GOPATH: "{{ ansible_env.HOME }}/.local/go"
  tags: golang

- name: Check that rustup exists
  stat:
    path: "{{ ansible_env.HOME }}/.local/rust/bin/rustup"
  register: rustup
  tags: rust

- name: Install Programs (Programming Packages) - rustup/rust
  shell: "curl https://sh.rustup.rs -sSf | sh -s -- -y"
  environment:
    RUSTUP_HOME: "{{ ansible_env.HOME }}/.local/rust"
    CARGO_HOME:  "{{ ansible_env.HOME }}/.local/rust"
  when: not rustup.stat.exists
  tags: rust

- name: Install Programs (Programming Packages) - rustup/rustanalyzer
  shell: |
    mkdir -p {{ ansible_env.HOME }}/.local/rust/bin;
    curl -L https://github.com/rust-analyzer/rust-analyzer/releases/latest/download/rust-analyzer-linux \
          -o {{ ansible_env.HOME }}/.local/rust/bin/rust-analyzer;
    chmod +x {{ ansible_env.HOME }}/.local/rust/bin/rust-analyzer
  when: not rustup.stat.exists
  environment:
    RUSTUP_HOME: "{{ ansible_env.HOME }}/.local/rust"
    CARGO_HOME:  "{{ ansible_env.HOME }}/.local/rust"
  tags: rust

- name: Install Programs (Programming Packages) - rust/runtime
  shell: |
    {{ ansible_env.HOME }}/.local/rust/bin/rustup install {{ item }}
  with_items:
    - stable-x86_64-unknown-linux-gnu
    - nightly-x86_64-unknown-linux-gnu
  environment:
    RUSTUP_HOME: "{{ ansible_env.HOME }}/.local/rust"
    CARGO_HOME:  "{{ ansible_env.HOME }}/.local/rust"
  when: not rustup.stat.exists
  tags: rust

- name: Install Programs (Programming Packages) - rust/deps
  shell: |
    {{ ansible_env.HOME }}/.local/rust/bin/rustup component add {{ item }}
  with_items:
    - rls --toolchain nightly-x86_64-unknown-linux-gnu
    - rust-src --toolchain nightly-x86_64-unknown-linux-gnu
  environment:
    RUSTUP_HOME: "{{ ansible_env.HOME }}/.local/rust"
    CARGO_HOME:  "{{ ansible_env.HOME }}/.local/rust"
  when: not rustup.stat.exists
  tags: rust
