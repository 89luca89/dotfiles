# my_apps.yml
---

- name: Install the rpmfusion and fonts repo packages
  dnf:
    state: present
    disable_gpg_check: yes
    name:
      - https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_facts.distribution_version }}.noarch.rpm
      - https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_facts.distribution_version }}.noarch.rpm
  become: yes
  tags: rpmfusion
  when: ansible_os_family == "Redhat"

- name: Remove bloat packages
  package:
    state: absent
    name: "{{ debloat_pkg }}"
  become: true

- name: Install Programs (Programming Packages)
  package:
    state: latest
    name: "{{ terminal_packages }}"
  become: true

- name: Install Programs (python)
  package:
    state: latest
    name: "{{ python_packages }}"
  become: true

- name: Install Programs (PIP Packages) - pip
  pip:
    state: latest
    executable: pip3
    extra_args: --user
    name: "{{ python_modules }}"
  become: true

- name: Install Programs (golang)
  package:
    state: latest
    name: "{{ golang_packages }}"
  become: true

- name: Instal additional packages
  dnf:
    name: "{{ item }}"
    state: present
    disable_gpg_check: true
  become: true
  with_items:
    - https://downloads.sourceforge.net/project/mscorefonts2/rpms/msttcore-fonts-installer-2.6-1.noarch.rpm
    - "@virtualization"
  when: ansible_facts['os_family'] == "RedHat"

- name: Install Programs (GUI Programs)
  package:
    state: latest
    name: "{{ my_packages }}"
  become: true

- name: Install Programs (Flatpak Programs - flathub)
  command: "flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo"
  become: true
  tags: flatpak

- name: Install Programs (Flatpak Programs )
  command: "flatpak install -y {{ item }}"
  with_items: "{{ flatpak_packages }}"
  become: true
  tags: flatpak

- name: Check that golang exists
  stat:
    path: "{{ ansible_env.HOME }}/.local/go/bin/gopls"
  register: golang

- name: Install Programs (Programming Packages) - golang
  command: "go get -u {{ item }}"
  with_items: "{{ golang_modules }}"
  environment:
    GOPATH: "{{ ansible_env.HOME }}/.local/go"
  when: not golang.stat.exists

- name: Install Programs (Programming Packages) - golangci-lint
  shell: |
    curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.27.0
  environment:
    GOPATH: "{{ ansible_env.HOME }}/.local/go"
  when: not golang.stat.exists

- name: Install Programs (Programming Packages) - gopls
  command: "go get golang.org/x/tools/gopls@latest"
  environment:
    GO111MODULE: "on"
    GOPATH: "{{ ansible_env.HOME }}/.local/go"
  when: not golang.stat.exists
