--recurse=yes
--exclude=*.bmp
--exclude=*.csv
--exclude=*.doc
--exclude=*.docx
--exclude=*.gif
--exclude=*.jpeg
--exclude=*.jpg
--exclude=*.lock
--exclude=*.log
--exclude=*.min.*
--exclude=*.pdf
--exclude=*.png
--exclude=*.spec.*
--exclude=*.sql
--exclude=*.stories.*
--exclude=*.tar.*
--exclude=*.test.*
--exclude=*.txt
--exclude=*/build/*
--exclude=*_compiled
--exclude=*pyc
--exclude=.*bundle.*
--exclude=.Master
--exclude=.bak
--exclude=.cache
--exclude=.class
--exclude=.csproj
--exclude=.csproj.user
--exclude=.dll
--exclude=.gem
--exclude=.git
--exclude=.map
--exclude=.pdb
--exclude=.pyc
--exclude=.sln
--exclude=.swp
--exclude=.tmp
--exclude=bower_components
--exclude=coverage
--exclude=cscope.*
--exclude=dist
--exclude=libraries
--exclude=min
--exclude=node_modules
--exclude=tags
--exclude=test
--exclude=tests
--exclude=vendor
--exclude=workspace
--fields=+ailmnSf
--tag-relative=yes

--langdef=YAML
--langmap=YAML:.yml.yaml
--regex-YAML=/^[ \t]*(.*):/\1/k,key,keys/
--regex-YAML=/^[ \t]*-[ \t]*name:[ \t]*(.+)/\1/k,tasks/

--langdef=Dockerfile
--langmap=Dockerfile:+(Dockerfile)
--regex-Dockerfile=/^(FROM|MAINTAINER|RUN|CMD|LABEL|EXPOSE|ENV|ADD|COPY|ENTRYPOINT|VOLUME|USER|WORKDIR|ARG|ONBUILD|STOPSIGNAL|HEALTHCHECK|SHELL)/\1/d,dockerfile,dockerfiles/

--langdef=Terraform
--langmap=Terraform:.tf.tfvars
--regex-Terraform=/^resource "(.+)" "(.+)"/\1 \2/r,resources/
--regex-Terraform=/^variable "(.+)"/\1/v,variables/
--regex-Terraform=/^module "(.+)"/\1/m,modules/
--regex-Terraform=/^output "(.+)"/\1/o,outputs/
--regex-Terraform=/^([a-z0-9_]+) =/\1/f,tfvars/

--langdef=Go
--langmap=Go:.go
--regex-Go=/func([ \t]+\([^)]+\))?[ \t]+([a-zA-Z0-9_]+)/\2/f,func/
--regex-Go=/var[ \t]+([a-zA-Z_][a-zA-Z0-9_]+)/\1/v,var/
--regex-Go=/type[ \t]+([a-zA-Z_][a-zA-Z0-9_]+)/\1/t,type/

--langdef=Rust
--langmap=Rust:.rs
--regex-Rust=/^[ \t]*(#\[[^\]]\][ \t]*)*(pub[ \t]+)?(extern[ \t]+)?("[^"]+"[ \t]+)?(unsafe[ \t]+)?fn[ \t]+([a-zA-Z0-9_]+)/\6/f,functions,function definitions/
--regex-Rust=/^[ \t]*(pub[ \t]+)?type[ \t]+([a-zA-Z0-9_]+)/\2/T,types,type definitions/
--regex-Rust=/^[ \t]*(pub[ \t]+)?enum[ \t]+([a-zA-Z0-9_]+)/\2/g,enum,enumeration names/
--regex-Rust=/^[ \t]*(pub[ \t]+)?struct[ \t]+([a-zA-Z0-9_]+)/\2/s,structure names/
--regex-Rust=/^[ \t]*(pub[ \t]+)?mod[ \t]+([a-zA-Z0-9_]+)/\2/m,modules,module names/
--regex-Rust=/^[ \t]*(pub[ \t]+)?(static|const)[ \t]+(mut[ \t]+)?([a-zA-Z0-9_]+)/\4/c,consts,static constants/
--regex-Rust=/^[ \t]*(pub[ \t]+)?(unsafe[ \t]+)?trait[ \t]+([a-zA-Z0-9_]+)/\3/t,traits,traits/
--regex-Rust=/^[ \t]*(pub[ \t]+)?(unsafe[ \t]+)?impl([ \t\n]*<[^>]*>)?[ \t]+(([a-zA-Z0-9_:]+)[ \t]*(<[^>]*>)?[ \t]+(for)[ \t]+)?([a-zA-Z0-9_]+)/\5 \7 \8/i,impls,trait implementations/
--regex-Rust=/^[ \t]*macro_rules![ \t]+([a-zA-Z0-9_]+)/\1/d,macros,macro definitions/

--langdef=Scala
--langmap=Scala:.scala
--regex-Scala=/^[ \t]*((abstract|final|sealed|implicit|lazy)[ \t]*)*(private[^ ]*|protected)?[ \t]*class[ \t]+([a-zA-Z0-9_]+)/\4/c,classes/
--regex-Scala=/^[ \t]*((abstract|final|sealed|implicit|lazy)[ \t]*)*(private[^ ]*|protected)?[ \t]*object[ \t]+([a-zA-Z0-9_]+)/\4/c,objects/
--regex-Scala=/^[ \t]*((abstract|final|sealed|implicit|lazy)[ \t]*)*(private[^ ]*|protected)?[ \t]*((abstract|final|sealed|implicit|lazy)[ \t]*)*case class[ \t]+([a-zA-Z0-9_]+)/\6/c,case classes/
--regex-Scala=/^[ \t]*((abstract|final|sealed|implicit|lazy)[ \t]*)*(private[^ ]*|protected)?[ \t]*case object[ \t]+([a-zA-Z0-9_]+)/\4/c,case objects/
--regex-Scala=/^[ \t]*((abstract|final|sealed|implicit|lazy)[ \t]*)*(private[^ ]*|protected)?[ \t]*trait[ \t]+([a-zA-Z0-9_]+)/\4/t,traits/
--regex-Scala=/^[ \t]*type[ \t]+([a-zA-Z0-9_]+)/\1/T,types/
--regex-Scala=/^[ \t]*((abstract|final|sealed|implicit|lazy|private[^ ]*(\[[a-z]*\])*|protected)[ \t]*)*def[ \t]+([a-zA-Z0-9_]+)/\4/m,methods/
--regex-Scala=/^[ \t]*((abstract|final|sealed|implicit|lazy|private[^ ]*|protected)[ \t]*)*val[ \t]+([a-zA-Z0-9_]+)/\3/l,constants/
--regex-Scala=/^[ \t]*((abstract|final|sealed|implicit|lazy|private[^ ]*|protected)[ \t]*)*var[ \t]+([a-zA-Z0-9_]+)/\3/l,variables/
--regex-Scala=/^[ \t]*package[ \t]+([a-zA-Z0-9_.]+)/\1/p,packages/
--regex-Scala=/^[ \t]*class[ \t]*([a-zA-Z0-9_]+)/\1/c,classes/
--regex-Scala=/^[ \t]*object[ \t]*([a-zA-Z0-9_]+)/\1/o,objects/
--regex-Scala=/^[ \t]*trait[ \t]*([a-zA-Z0-9_]+)/\1/t,traits/
--regex-Scala=/^[ \t]*case[ \t]*class[ \t]*([a-zA-Z0-9_]+)/\1/r,cclasses/
--regex-Scala=/^[ \t]*abstract[ \t]*class[ \t]*([a-zA-Z0-9_]+)/\1/a,aclasses/
--regex-Scala=/^[ \t]*def[ \t]*([a-zA-Z0-9_=]+)[ \t]*.*[:=]/\1/m,methods/
--regex-Scala=/[ \t]*val[ \t]*([a-zA-Z0-9_]+)[ \t]*[:=]/\1/V,values/
--regex-Scala=/[ \t]*var[ \t]*([a-zA-Z0-9_]+)[ \t]*[:=]/\1/v,variables/
--regex-Scala=/^[ \t]*type[ \t]*([a-zA-Z0-9_]+)[ \t]*[\[<>=]/\1/T,types/
--regex-Scala=/^[ \t]*import[ \t]*([a-zA-Z0-9_{}., \t=>]+$)/\1/i,includes/
--regex-Scala=/^[ \t]*package[ \t]*([a-zA-Z0-9_.]+$)/\1/p,packages/

--langdef=Markdown
--langmap=Markdown:.mkd.md.markdown
--regex-Markdown=/^#[ \t]+(.*)/\1/A,Heading1/
--regex-Markdown=/^##[ \t]+(.*)/\1/B,Heading2/
--regex-Markdown=/^###[ \t]+(.*)/\1/C,Heading3/
--regex-Markdown=/^####[ \t]+(.*)/\1/D,Heading4/
--regex-Markdown=/^#####[ \t]+(.*)/\1/E,Heading5/
--regex-Markdown=/^######[ \t]+(.*)/\1/F,Heading6/
