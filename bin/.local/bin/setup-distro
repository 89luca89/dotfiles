#!/bin/sh

if hostname | grep -q localhost; then
	printf "select new hostname: "
	read -r hostname
	sudo hostnamectl set-hostname "$hostname"
fi

set -x
set -o errexit
set -o nounset

minkb="$(awk '/MemTotal/ {printf "%.0f", $2 * 0.01}' /proc/meminfo)"
echo "
net.ipv4.ping_group_range = 0 1000
# Hardening
dev.tty.ldisc_autoload=0
fs.protected_fifos=2
fs.protected_hardlinks=1
fs.protected_regular=2
fs.protected_symlinks=1
fs.suid_dumpable=0
kernel.core_uses_pid=1
kernel.dmesg_restrict=1
kernel.kexec_load_disabled=1
kernel.kptr_restrict=2
kernel.panic=60
kernel.panic_on_io_nmi=1
kernel.panic_on_oops=1
kernel.panic_on_unrecovered_nmi=1
kernel.perf_event_paranoid=3
kernel.printk=3 3 3 3
kernel.randomize_va_space=2
kernel.sysrq=4
kernel.unprivileged_bpf_disabled=1
kernel.yama.ptrace_scope=2
net.core.bpf_jit_harden=2
net.ipv4.conf.all.accept_redirects=0
net.ipv4.conf.all.accept_source_route=0
net.ipv4.conf.all.arp_announce=2
net.ipv4.conf.all.arp_ignore=1
net.ipv4.conf.all.log_martians=1
net.ipv4.conf.all.rp_filter=1
net.ipv4.conf.all.secure_redirects=0
net.ipv4.conf.all.send_redirects=0
net.ipv4.conf.all.shared_media=1
net.ipv4.conf.default.accept_redirects=0
net.ipv4.conf.default.accept_source_route=0
net.ipv4.conf.default.log_martians=1
net.ipv4.conf.default.rp_filter=1
net.ipv4.conf.default.secure_redirects=0
net.ipv4.conf.default.send_redirects=0
net.ipv4.conf.default.shared_media=1
net.ipv4.icmp_echo_ignore_all=1
net.ipv4.icmp_echo_ignore_broadcasts=1
net.ipv4.icmp_ignore_bogus_error_responses=1
net.ipv4.icmp_ratelimit=100
net.ipv4.icmp_ratemask=88089
net.ipv4.tcp_dsack=0
net.ipv4.tcp_fack=0
net.ipv4.tcp_max_syn_backlog=2048
net.ipv4.tcp_rfc1337=1
net.ipv4.tcp_sack=0
net.ipv4.tcp_syn_retries=5
net.ipv4.tcp_synack_retries=2
net.ipv4.tcp_syncookies=1
net.ipv4.tcp_timestamps=0
net.ipv6.conf.all.accept_ra=0
net.ipv6.conf.all.accept_redirects=0
net.ipv6.conf.all.accept_source_route=0
net.ipv6.conf.all.autoconf=0
net.ipv6.conf.all.router_solicitations=0
net.ipv6.conf.all.use_tempaddr=2
net.ipv6.conf.default.accept_ra=0
net.ipv6.conf.default.accept_ra_defrtr=0
net.ipv6.conf.default.accept_ra_pinfo=0
net.ipv6.conf.default.accept_ra_rtr_pref=0
net.ipv6.conf.default.accept_redirects=0
net.ipv6.conf.default.accept_source_route=0
net.ipv6.conf.default.autoconf=0
net.ipv6.conf.default.dad_transmits=0
net.ipv6.conf.default.max_addresses=1
net.ipv6.conf.default.router_solicitations=0
net.ipv6.conf.default.use_tempaddr=2
vm.mmap_min_addr=65536
vm.mmap_rnd_bits=32
vm.mmap_rnd_compat_bits=16
vm.unprivileged_userfaultfd=0
# Zram setup
vm.dirty_background_ratio = 10
vm.dirty_expire_centisecs = 6000
vm.dirty_ratio = 20
vm.dirty_writeback_centisecs = 1500
vm.laptop_mode = 5
vm.min_free_kbytes=67584
vm.page-cluster = 0
vm.swappiness = 180
vm.watermark_boost_factor = 15000
vm.watermark_scale_factor = 10"  | sudo tee /etc/sysctl.d/99-sysctl-custom.conf > /dev/null
sudo sysctl --system --quiet || :

echo "[zram0]
zram-size = ram" | sudo tee /etc/systemd/zram-generator.conf > /dev/null

# shellcheck disable=SC2016,SC1083
echo '#
ACTION=="add", SUBSYSTEM=="acpi", DRIVERS=="button", ATTRS{hid}=="PNP0C0D", ATTR{power/wakeup}="disabled"
ACTION=="add", SUBSYSTEM=="serio", DRIVERS=="atkbd", ATTR{power/wakeup}="disabled"
ACTION=="add", SUBSYSTEM=="i2c", DRIVERS=="i2c_hid_acpi", ATTRS{name}=="PIXA3854:00", ATTR{power/wakeup}="disabled"
ACTION=="add|change", SUBSYSTEM=="acpi", ATTR{power/control}="auto"
ACTION=="add|change", SUBSYSTEM=="ahci", ATTR{power/control}="auto"
ACTION=="add|change", SUBSYSTEM=="block", ATTR{power/control}="auto"
ACTION=="add|change", SUBSYSTEM=="i2c", ATTR{power/control}="auto"
ACTION=="add|change", SUBSYSTEM=="net", KERNEL=="enp*", RUN+="/usr/sbin/ethtool -s %k wol d"
ACTION=="add|change", SUBSYSTEM=="net", KERNEL=="wlp*", RUN+="/usr/sbin/iw dev %k set power_save on"
ACTION=="add|change", SUBSYSTEM=="pci", ATTR{power/control}="auto"
ACTION=="add|change", SUBSYSTEM=="scsi", ATTR{power/control}="auto"
ACTION=="add|change", SUBSYSTEM=="scsi_host", KERNEL=="host*", ATTR{link_power_management_policy}="min_power"
ACTION=="add|change", SUBSYSTEM=="usb", ATTR{power/autosuspend}="1"
ACTION=="add|change", SUBSYSTEM=="workqueue", ATTR{power/control}="auto"
ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/iosched/low_latency}="1"
ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/scheduler}="bfq"
ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/read_ahead_kb}="4096"
ACTION=="add|change", KERNEL=="nvme[0-9]n[0-9]", ATTR{queue/scheduler}="none"
ACTION=="add|change", KERNEL=="nvme[0-9]n[0-9]", ATTR{queue/read_ahead_kb}="16384"
# Trigger on AC/BAT
# SUBSYSTEM=="power_supply",ATTR{online}=="1",RUN+="/usr/bin/powerprofilesctl set performance"
# SUBSYSTEM=="power_supply",ATTR{online}=="0",RUN+="/usr/bin/powerprofilesctl set power-saver"
'  | sudo tee /etc/udev/rules.d/powersave.rules > /dev/null
sudo udevadm control --reload
sudo udevadm trigger

echo "[Unit]
Description=Run udev trigger after wake
After=suspend.target hibernate.target hybrid-sleep.target suspend-then-hibernate.target

[Service]
ExecStart=/usr/bin/udevadm trigger

[Install]
WantedBy=suspend.target hibernate.target hybrid-sleep.target suspend-then-hibernate.target" | sudo tee /etc/systemd/system/udev-suspend.service
sudo systemctl enable --now udev-suspend.service

if [ -e /etc/lvm/lvm.conf ]; then
	sudo sed -i 's|# issue_discards = 0|issue_discards = 1|g' /etc/lvm/lvm.conf
fi

if [ -e /etc/crypttab ]; then
	sudo sed -i 's|none luks$|none luks,discard,no-read-workqueue,no-write-workqueue|g' /etc/crypttab
	sudo sed -i 's|none discard$|none discard,no-read-workqueue,no-write-workqueue|g' /etc/crypttab
	sudo sed -i 's|x-initrd.attach$|x-initrd.attach,discard,no-read-workqueue,no-write-workqueue|g' /etc/crypttab
	# sudo cryptsetup --perf-no_read_workqueue --perf-no_write_workqueue --allow-discards --persistent refresh "$(sudo cat /etc/crypttab | cut -d' ' -f1)"
fi
sudo systemctl enable fstrim.timer
sudo fstrim -va

systemd_user_services="
	evolution-addressbook-factory.service
	evolution-calendar-factory.service
	evolution-source-registry.service
	evolution-user-prompter.service
	gvfs-goa-volume-monitor.service
	localsearch-3.service
	localsearch-control-3.service
	localsearch-writeback-3.service
	spice-vdagent.service
	tracker-extract-3.service
	tracker-miner-fs-3.service
	tracker-miner-fs-control-3.service
	tracker-miner-rss-3.service
	tracker-writeback-3.service
	tracker-xdg-portal-3.service
"
for systemd_user_service in ${systemd_user_services}; do
	systemctl --user disable --now "${systemd_user_service}" 2> /dev/null || :
	systemctl --user mask --now "${systemd_user_service}" 2> /dev/null || :
done

systemd_system_services="
	switcheroo-control.service
	packagekit.service
"
for systemd_system_service in ${systemd_system_services}; do
	sudo systemctl disable --now "${systemd_system_service}" 2> /dev/null || :
	sudo systemctl mask --now "${systemd_system_service}" 2> /dev/null || :
done

# Disable ancient modules
echo "
install af_802154 /bin/false
install appletalk /bin/false
install atm /bin/false
install ax25 /bin/false
install can /bin/false
install cramfs /bin/false
install dccp /bin/false
install decnet /bin/false
install econet /bin/false
install firewire-core /bin/false
install freevxfs /bin/false
install hfs /bin/false
install hfsplus /bin/false
install ipx /bin/false
install jffs2 /bin/false
install n-hdlc /bin/false
install netrom /bin/false
install p8022 /bin/false
install p8023 /bin/false
install psnap /bin/false
install rds  /bin/false
install rds /bin/false
install rose /bin/false
install sctp /bin/false
install tipc /bin/false
install udf /bin/false
install vivid /bin/false
install x25 /bin/false
" | sudo tee -a /etc/modprobe.d/hardening.conf

# Load rndis_host android usb tethering module at boot
echo "rndis_host" | sudo tee "/etc/modules-load.d/rndis_host.conf"
echo "" | sudo tee /etc/modprobe.d/50-blacklist-rndis.conf

KERNEL_CMDLINE=""
KERNEL_CMDLINE="$KERNEL_CMDLINE drm.debug=0"
KERNEL_CMDLINE="$KERNEL_CMDLINE drm.vblankoffdelay=1"
KERNEL_CMDLINE="$KERNEL_CMDLINE e1000e.SmartPowerDownEnable=1"
KERNEL_CMDLINE="$KERNEL_CMDLINE i915.disable_power_well=1"
KERNEL_CMDLINE="$KERNEL_CMDLINE i915.enable_dc=2"
KERNEL_CMDLINE="$KERNEL_CMDLINE i915.enable_fbc=1"
KERNEL_CMDLINE="$KERNEL_CMDLINE i915.enable_guc=3"
KERNEL_CMDLINE="$KERNEL_CMDLINE i915.enable_psr=2"
KERNEL_CMDLINE="$KERNEL_CMDLINE i915.enable_rc6=7"
KERNEL_CMDLINE="$KERNEL_CMDLINE i915.modeset=1"
KERNEL_CMDLINE="$KERNEL_CMDLINE i915.powersave=1"
KERNEL_CMDLINE="$KERNEL_CMDLINE iomem=relaxed"
KERNEL_CMDLINE="$KERNEL_CMDLINE iwlmvm.power_scheme=3"
KERNEL_CMDLINE="$KERNEL_CMDLINE iwlwifi.power_level=5"
KERNEL_CMDLINE="$KERNEL_CMDLINE iwlwifi.power_save=Y"
KERNEL_CMDLINE="$KERNEL_CMDLINE nmi_watchdog=0"
KERNEL_CMDLINE="$KERNEL_CMDLINE nowatchdog"
KERNEL_CMDLINE="$KERNEL_CMDLINE pcie_aspm.policy=powersupersave"
KERNEL_CMDLINE="$KERNEL_CMDLINE pcie_aspm=force"
KERNEL_CMDLINE="$KERNEL_CMDLINE usbcore.autosuspend=1"
KERNEL_CMDLINE="$KERNEL_CMDLINE workqueue.power_efficient=true"
# Hardening taken from ChromeOS and Android
KERNEL_CMDLINE="$KERNEL_CMDLINE lockdown=confidentiality"
# KERNEL_CMDLINE="$KERNEL_CMDLINE lockdown=integrity" # Integrity allows bpf, confidentiality is better when possible
KERNEL_CMDLINE="$KERNEL_CMDLINE amd_iommu=on"
# KERNEL_CMDLINE="$KERNEL_CMDLINE debugfs=off" # Need for powertop
KERNEL_CMDLINE="$KERNEL_CMDLINE efi=disable_early_pci_dma"
KERNEL_CMDLINE="$KERNEL_CMDLINE init_on_alloc=1"
KERNEL_CMDLINE="$KERNEL_CMDLINE init_on_free=1"
KERNEL_CMDLINE="$KERNEL_CMDLINE intel_iommu=on"
KERNEL_CMDLINE="$KERNEL_CMDLINE iommu.passthrough=0"
KERNEL_CMDLINE="$KERNEL_CMDLINE iommu.strict=1"
KERNEL_CMDLINE="$KERNEL_CMDLINE loglevel=0"
KERNEL_CMDLINE="$KERNEL_CMDLINE module.sig_enforce=1"
KERNEL_CMDLINE="$KERNEL_CMDLINE page_alloc.shuffle=1"
KERNEL_CMDLINE="$KERNEL_CMDLINE page_table_check=on"
KERNEL_CMDLINE="$KERNEL_CMDLINE randomize_kstack_offset=1"
KERNEL_CMDLINE="$KERNEL_CMDLINE slab_nomerge"
KERNEL_CMDLINE="$KERNEL_CMDLINE slub_debug=FZ"
KERNEL_CMDLINE="$KERNEL_CMDLINE vsyscall=none"

# grub case
if [ -e /etc/default/grub ] && ! grep -q "$KERNEL_CMDLINE" /etc/default/grub; then
	sudo sed -i 's|quiet"|quiet splash"|g' /etc/default/grub
	sudo sed -i "s|GRUB_CMDLINE_LINUX=\".*\"|GRUB_CMDLINE_LINUX=quiet splash \"$KERNEL_CMDLINE\"|g" /etc/default/grub
fi

# systemd-boot case
if [ -e /etc/kernel/cmdline ] && ! grep -q "$KERNEL_CMDLINE" /etc/kernel/cmdline; then
	sudo sed -i "s|quiet.*systemd.show_status=no|quiet $KERNEL_CMDLINE systemd.show_status=no|g" /etc/kernel/cmdline
fi

if command -v /sbin/transactional-update && ! command -v docker; then
	sudo transactional-update -c -d run sh -c "zypper dup --remove-orphaned -y && \
		zypper in -y --force --recommends patterns-glibc-hwcaps-x86_64_v3
		truncate -s 0 /.snapshots/swap && \
		chattr +C /.snapshots/swap && \
		fallocate -l 8G /.snapshots/swap && \
		chmod 0600 /.snapshots/swap && \
		mkswap /.snapshots/swap && \
		echo '/.snapshots/swap none swap defaults,pri=1 0 0' >> /etc/fstab && \
		zypper in -y docker docker-compose docker-buildx powertop cpupower gnome-terminal && \
		systemctl enable powertop && \
		systemctl enable docker && \
		usermod -aG docker $USER && \
		dracut --force --regenerate-all --parallel && \
		/sbin/pbl --install"
	exit $?
fi
