#!/bin/sh

adb root

echo "########### Removing unwanted packages..."
PACKAGE_REMOVE="
	com.android.hotwordenrollment.okgoogle
	com.android.hotwordenrollment.tgoogle
	com.android.hotwordenrollment.xgoogle
	com.google.android.apps.gcs
	com.google.android.apps.tycho
	com.google.android.ims
	com.verizon.mips.services
	com.verizon.obdm
	com.verizon.obdm_permissions
	com.verizon.services
	com.vzw.apnlib
	org.lineageos.jelly
"

for package in $PACKAGE_REMOVE; do
	if adb shell pm list packages | grep -q "${package}"; then
		adb shell pm uninstall --user 0 "${package}"
		adb shell pm disable "${package}"
	fi
done

echo "########### Installing wanted packages..."
PACKAGE_INSTALL="
	org.fdroid.fdroid
	com.aurora.store
"
for package in $PACKAGE_INSTALL; do
	if ! adb shell pm list packages | grep -q "${package}"; then
		echo "...installing $package..."
		apk="$(curl -sL "https://f-droid.org/en/packages/$package" |
			grep -o "https://f-droid.org/repo/$package.*.apk" | head -n 1)"
		curl -sL "${apk}" -o /tmp/package.apk
		adb install /tmp/package.apk
		rm -f /tmp/package.apk
	fi
done

echo "########### Setting up android global settings via adb..."
adb shell wm density 430
adb shell settings list global | cut -d '=' -f1 | xargs -I{} adb shell settings reset global {}
adb shell settings put global adaptive_battery_management_enabled 1
adb shell settings put global adb_enabled 1
adb shell settings put global add_users_when_locked 0
adb shell settings put global animator_duration_scale 0.5
adb shell settings put global app_restriction_enabled true
adb shell settings put global app_standby_enabled 1
adb shell settings put global battery_saver_constants advertise_is_enabled=true,datasaver_disabled=false,enable_night_mode=false,launch_boost_disabled=false,vibration_disabled=false,animation_disabled=false,soundtrigger_disabled=true,fullbackup_deferred=true,keyvaluebackup_deferred=true,firewall_disabled=false,gps_mode=0,adjust_brightness_disabled=true,adjust_brightness_factor=0.5,force_all_apps_standby=true,force_background_check=true,optional_sensors_disabled=true,aod_disabled=true,quick_doze_enabled=true
adb shell settings put global battery_stats_constants track_cpu_times_by_proc_state=false
adb shell settings put global battery_tip_constants app_restriction_enabled=true
adb shell settings put global ble_scan_always_enabled 0
adb shell settings put global ble_scan_balanced_interval_ms 730
adb shell settings put global ble_scan_balanced_window_ms 183
adb shell settings put global ble_scan_low_power_interval_ms 10240
adb shell settings put global ble_scan_low_power_window_ms 512
adb shell settings put global cached_apps_freezer enabled
adb shell settings put global default_restrict_background_data 1
adb shell settings put global heads_up_notifications_enabled 0
adb shell settings put global hotword_detection_enabled 0
adb shell settings put global location_background_throttle_interval_ms 600000
adb shell settings put global location_global_kill_switch 1
adb shell settings put global non_persistent_mac_randomization_force_enabled 1
adb shell settings put global notification_bubbles 0
adb shell settings put global ntp_server pool.ntp.org
adb shell settings put global private_dns_mode hostname
adb shell settings put global private_dns_specifier dns.adguard-dns.com
adb shell settings put global smart_replies_in_notifications_flags enabled=false
adb shell settings put global transition_animation_scale 0.5
adb shell settings put global wifi_networks_available_notification_on 0
adb shell settings put global wifi_scan_always_enabled 0
adb shell settings put global wifi_sleep_policy 0
adb shell settings put global wifi_wakeup_enabled 0
adb shell settings put global window_animation_scale 0.5
adb shell settings put global zen_mode 0

echo "########### Setting up android secure settings via adb..."
adb shell settings list secure | cut -d '=' -f1 | xargs -I{} adb shell settings reset secure {}
adb shell settings put secure aware_enabled 0
adb shell settings put secure aware_lock_enabled 0
adb shell settings put secure install_non_market_apps 1
adb shell settings put secure location_mode 0
adb shell settings put secure lock_screen_allow_private_notifications 0
adb shell settings put secure lock_screen_owner_info_enabled 0
adb shell settings put secure lock_screen_show_notifications 0
adb shell settings put secure lock_to_app_exit_locked 1
adb shell settings put secure lockscreen.disabled 0
adb shell settings put secure night_display_activated 1
adb shell settings put secure night_display_color_temperature 6000
adb shell settings put secure notification_badging 0
adb shell settings put secure notification_dismiss_rtl null
adb shell settings put secure notification_history_enabled null
adb shell settings put secure screensaver_activate_on_dock 1
adb shell settings put secure screensaver_activate_on_sleep 0
adb shell settings put secure screensaver_enabled 0
adb shell settings put secure silence_gesture 0

echo "########### Setting up android system settings via adb..."
adb shell settings put system haptic_feedback_enabled 1
adb shell settings put system lock_to_app_enabled 1
adb shell settings put system lockscreen_sounds_enabled 0
adb shell settings put system status_bar_show_battery_percent 1
adb shell settings put system vibrate_when_ringing 1

echo "########### Setting up background data restriction..."
android_media_uid="$(adb shell pm list packages -u -U | grep com.android.mtp | grep -o "uid.*" | cut -d ':' -f2)"
APP_LIST="$(adb shell pm list packages -u -U |
	grep -vE "${android_media_uid}$|1000$" |
	grep -vE "com.qualcomm.location" |
	grep -vE "fennec|newpipe|telegram|whatsapp|syncthing|k9|decsync|com.android.deskclock")"
UID_LIST="$(echo "$APP_LIST" | grep -o "uid.*" | cut -d':' -f2 | sort -u)"

adb shell cmd netpolicy set restrict-background true
for uid in ${UID_LIST}; do
	adb shell cmd netpolicy add restrict-background-blacklist "$uid" 2> /dev/null
done

echo "########### Setting up background data restriction exceptions..."

APP_LIST="$(adb shell pm list packages -u -U |
	grep -E "${android_media_uid}$|telegram|whatsapp|syncthing|newpipe|k9|decsync")"
UID_LIST="$(echo "$APP_LIST" | grep -o "uid.*" | cut -d':' -f2 | sort -u)"
for uid in ${UID_LIST}; do
	adb shell cmd netpolicy add restrict-background-whitelist "$uid"
done

echo "########### Setting up background running restrictions..."
APP_LIST="$(adb shell pm list packages -u |
	grep -vE "fennec|newpipe|telegram|whatsapp|syncthing|k9|decsync|com.android.deskclock")"
UID_LIST="$(echo "$APP_LIST" | cut -d':' -f2 | sort -u)"
for uid in ${UID_LIST}; do
	adb shell dumpsys deviceidle whitelist -"${uid}"
done

# Restrict to 3rd party apps
APP_LIST="$(adb shell pm list packages -3 -u |
	grep -vE "fennec|newpipe|telegram|whatsapp|syncthing|k9|decsync")"
UID_LIST="$(echo "$APP_LIST" | cut -d':' -f2 | sort -u)"
for uid in ${UID_LIST}; do
	adb shell cmd appops set "${uid}" RUN_IN_BACKGROUND ignore
	adb shell cmd appops set "${uid}" RUN_ANY_IN_BACKGROUND ignore
done

echo "########### Setting up background running restrictions exceptions..."
APP_LIST="$(adb shell pm list packages |
	grep -E "fennec|newpipe|telegram|whatsapp|syncthing|k9|decsync|com.android.deskclock")"
UID_LIST="$(echo "$APP_LIST" | cut -d':' -f2 | sort -u)"
for uid in ${UID_LIST}; do
	adb shell cmd appops set "${uid}" RUN_IN_BACKGROUND allow
	adb shell cmd appops set "${uid}" RUN_ANY_IN_BACKGROUND allow
	adb shell dumpsys deviceidle whitelist +"${uid}"
done
