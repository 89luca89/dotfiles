#!/bin/sh

set -o errexit
set -o nounset

echo "
vm.laptop_mode=5
kernel.nmi_watchdog=0
vm.swappiness=5
vm.oom_kill_allocating_task=1
" | sudo tee /etc/sysctl.d/config.conf > /dev/null

echo "
[device]
wifi.scan-rand-mac-address=yes

[connection]
wifi.cloned-mac-address=random
ethernet.cloned-mac-address=random
" | sudo tee /etc/NetworkManager/conf.d/00-macrandomize.conf > /dev/null

echo "
[main]
hostname-mode=none
" | sudo tee /etc/NetworkManager/conf.d/01-transient-hostname.conf > /dev/null

echo '
ACTION=="add|change", SUBSYSTEM=="acpi", ATTR{power/control}="auto"
ACTION=="add|change", SUBSYSTEM=="ahci", ATTR{power/control}="auto"
ACTION=="add|change", SUBSYSTEM=="block", ATTR{power/control}="auto"
ACTION=="add|change", SUBSYSTEM=="i2c", ATTR{power/control}="auto"
ACTION=="add|change", SUBSYSTEM=="net", KERNEL=="enp*", RUN+="/usr/sbin/ethtool -s %k wol d"
ACTION=="add|change", SUBSYSTEM=="net", KERNEL=="wlp*", RUN+="/usr/sbin/iw dev %k set power_save on"
ACTION=="add|change", SUBSYSTEM=="pci", ATTR{power/control}="auto"
ACTION=="add|change", SUBSYSTEM=="scsi", ATTR{power/control}="auto"
ACTION=="add|change", SUBSYSTEM=="scsi_host", KERNEL=="host*", ATTR{link_power_management_policy}="min_power"
ACTION=="add|change", SUBSYSTEM=="usb", ATTR{power/autosuspend}="1"
ACTION=="add|change", SUBSYSTEM=="workqueue", ATTR{power/control}="auto"
ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/iosched/low_latency}="1"
ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/scheduler}="bfq"
ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/read_ahead_kb}="4096"
ACTION=="add|change", KERNEL=="nvme[0-9]n[0-9]", ATTR{queue/scheduler}="kyber"
ACTION=="add|change", KERNEL=="nvme[0-9]n[0-9]", ATTR{queue/read_ahead_kb}="16384"
# ACTION=="add|change", SUBSYSTEM=="power_supply", RUN+="/usr/sbin/powertop --auto-tune"
# SUBSYSTEM=="power_supply",ENV{POWER_SUPPLY_ONLINE}=="0",RUN+="/usr/sbin/powertop --auto-tune"
' | sudo tee /etc/udev/rules.d/powersave.rules > /dev/null

if [ -e /etc/lvm/lvm.conf ]; then
    sudo sed -i 's|# issue_discards = 0|issue_discards = 1|g' /etc/lvm/lvm.conf
fi

if [ -e /etc/crypttab ]; then
    sudo sed -i 's|none discard$|none discard,no-read-workqueue,no-write-workqueue|g' /etc/crypttab
    sudo sed -i 's|x-initrd.attach$|x-initrd.attach,discard,no-read-workqueue,no-write-workqueue|g' /etc/crypttab
fi

sudo sed -i 's|GRUB_CMDLINE_LINUX=""|GRUB_CMDLINE_LINUX="amdgpu.aspm=1 amdgpu.cik_support=1 amdgpu.dc=1 amdgpu.dcfeaturemask="0xB" amdgpu.si_support=1 dm_mod.use_blk_mq=1 drm.debug=0 drm.vblankoffdelay=1 e1000e.SmartPowerDownEnable=1 i915.disable_power_well=0 i915.enable_dc=2 i915.enable_fbc=1 i915.enable_guc=3 i915.enable_psr=1 i915.enable_rc6=7 i915.powersave=1 iwlmvm.power_scheme=3 iwlwifi.power_level=5 iwlwifi.power_save="Y" mmc_mod.use_blk_mq=1 nvme_core.default_ps_max_latency_us=20000 nvme_core.force_apst=1 pcie_aspm=force pcie_aspm.policy=powersupersave scsi_mod.use_blk_mq=1 thinkpad_acpi.fan_control=1 usbcore.autosuspend=1"|g' /etc/default/grub

systemd_user_services="
evolution-addressbook-factory.service
evolution-calendar-factory.service
evolution-source-registry.service
evolution-user-prompter.service
gamemoded.service.service
gvfs-goa-volume-monitor.service
tracker-extract-3.service
tracker-miner-fs-3.service
tracker-miner-fs-control-3.service
tracker-miner-rss-3.service
tracker-writeback-3.service
tracker-xdg-portal-3.service
"
for systemd_user_service in ${systemd_user_services}; do
    systemctl --user disable --now "${systemd_user_service}" 2> /dev/null || :
    systemctl --user mask "${systemd_user_service}" 2> /dev/null || :
done

systemd_system_services="
NetworkManager-wait-online.service
packagekit.service
"
for systemd_system_service in ${systemd_system_services}; do
    sudo systemctl disable --now "${systemd_system_service}" 2> /dev/null || :
    sudo systemctl mask "${systemd_system_service}" 2> /dev/null || :
done

sudo systemctl enable --now fstrim.timer

sudo transactional-update -c pkg install \
  docker docker-compose \
  patterns-server-kvm_server patterns-server-kvm_tools
sudo transactional-update -c grub.cfg
sudo transactional-update -c apply

sudo systemctl enable --now virtqemud.socket virtnetworkd.socket virtstoraged.socket virtnodedevd.socket docker.service

setup-flatpak
# distrobox-auto-update
# flatpak-auto-update
