# To run
# ansible-playbook setup.yml --ask-become-pass

- name: Playbook to manage My Distro
  hosts: localhost
  connection: local
  gather_facts: true
  tasks:

    - name: Ensure Vim folders Exists
      file:
        path: '{{ item }}'
        state: directory
      with_items:
        - '{{ ansible_env.HOME }}/.vim'
        - '{{ ansible_env.HOME }}/.vim/swap'
        - '{{ ansible_env.HOME }}/.vim/undo'
        - '{{ ansible_env.HOME }}/.vim/syntax'
      tags: dotfiles

    - name: Install scripts before starting dotfiles
      get_url:
        url: '{{ item.src }}'
        dest: '{{ item.dest }}'
        mode: 0755
      with_items:
        - { src: "https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim", dest: '{{ ansible_env.HOME }}/.vim/autoload' }
        - { src: "https://raw.githubusercontent.com/rudes/vim-java/master/syntax/java.vim", dest: '{{ ansible_env.HOME }}/.vim/syntax' }
      tags: dotfiles

    - name: Check if Dotfile folder is present
      stat:
        path: '{{ ansible_env.HOME }}/dotfiles'
      register: file_exists
      tags: dotfiles

    - name: Download Dotfiles
      git:
        repo: https://gitlab.com/89luca89/dotfiles
        dest: '{{ ansible_env.HOME }}/dotfiles'
        version: master
        update: true
      when: not file_exists.stat.exists
      tags: dotfiles

    - name: link dotfiles
      file:
        src: '{{ item.src }}'
        dest: '{{ item.dest }}'
        state: link
      with_items:
        - { src: "~/dotfiles/.aliases", dest: "~/.aliases" }
        - { src: "~/dotfiles/.bashrc", dest: "~/.bashrc" }
        - { src: "~/dotfiles/.tmux.conf", dest: "~/.tmux.conf" }
        - { src: "~/dotfiles/.vimrc-full", dest: "~/.vimrc" }
        - { src: "~/dotfiles/.zshrc", dest: "~/.zshrc" }
        - { src: "~/dotfiles/.toprc", dest: "~/.toprc" }
        - { src: "~/dotfiles/.npmrc", dest: "~/.npmrc" }
        - { src: "~/dotfiles/.ctags", dest: "~/.ctags" }
        - { src: "~/dotfiles/.clang-format", dest: "~/.clang-format" }
        - { src: "~/dotfiles/libinput-gestures.conf", dest: "~/.config/libinput-gestures.conf" }
      tags: dotfiles

    - name: Load Gnome Keybindings and Terminal Settings
      shell: dconf load {{ item.key }} < {{ item.value }}
      with_items:
        - {key: /org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/, value: '{{ ansible_env.HOME }}/dotfiles/gnome-keybindings.conf'}
        - {key: /org/gnome/terminal/, value: '{{ ansible_env.HOME }}/dotfiles/gnome-terminal.conf'}
      tags: dotfiles

    - name: Configure Keyboard and Cursor Options
      dconf:
        key: '{{ item.key }}'
        value: '{{ item.value }}'
        state: present
      with_items:
        - { key: /org/gnome/desktop/interface/cursor-blink, value: 'false' }
        - { key: /org/gnome/desktop/privacy/disable-microphone, value: 'true' }
        - { key: /org/gnome/desktop/privacy/recent-files-max-age, value: '7' }
        - { key: /org/gnome/desktop/privacy/remove-old-temp-files, value: 'true' }
        - { key: /org/gnome/desktop/privacy/disable-camera, value: 'true' }
        - { key: /org/gnome/desktop/privacy/report-technical-problems, value: 'false' }
        - { key: /org/gnome/desktop/privacy/remove-old-trash-files, value: 'true' }
        - { key: /org/gnome/desktop/privacy/send-software-usage-stats, value: 'false' }
      tags: dotfiles

    - name: Update the /etc/hosts file with node name
      lineinfile:
        path: /etc/hosts
        regexp: "127.0.0.1\t{{ ansible_hostname }}"
        line: "127.0.0.1\t{{ ansible_hostname }}"
        state: present
        backup: true
      become: true
      tags: dotfiles

    - name: Update the profiles file with personal variables
      lineinfile:
        path: /etc/profile
        regexp: '{{ item }}'
        line: '{{ item }}'
        state: present
        backup: true
      with_items:
        - export MOZ_USE_XINPUT2=1
        - export MOZ_ACCELLERATED=1
        - export MOZ_WEBRENDER=1
      become: true
      tags: dotfiles

    - name: Remove Programs (Unused Programs)
      package:
        name: '{{ item }}'
        state: removed
      with_items:
        - gnome-contacts
        - gnome-calendar
        - gnome-documents
        - gnome-dictionary
        - gnome-photos
        - gnome-music
        - gnome-boxes
        - gnome-getting-started-docs
        - gnome-initial-setup
        - gnome-maps
        - gnome-online-miners
        - gnome-photos
        - gnome-user-docs
        - gnome-user-share
        - gnome-video-effects
        - gnome-weather
        - gnome-logs
        - gnome-characters
        - gnome-font-viewer
        - yelp
        - gnome-shell-extension-alternate-tab
        - gnome-shell-extension-apps-menu
        - gnome-shell-extension-background-logo
        - gnome-shell-extension-launch-new-instance
        - gnome-shell-extension-places-menu
        - gnome-shell-extension-window-list
        - setroubleshoot
        - setroubleshoot-legacy
        - setroubleshoot-plugins
        - setroubleshoot-server
        - gfbgraph
        - simple-scan
        - open-vm-tools
        - virtualbox-guest-additions
        - totem
      become: true
      tags: bloat

    - name: Setup /usr/local directory
      file:
        dest: /usr/local
        owner: luca-linux
        group: luca-linux
        recurse: true
      become: true

    - name: Check if rpmfusion exists
      stat:
        path: /etc/yum.repos.d/rpmfusion-free.repo
      register: file_exists
      tags: rpmfusion
    - name: Install the rpmfusion and fonts repo packages
      dnf:
        name: '{{ item }}'
        state: present
      with_items:
        - http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_facts.distribution_version }}.noarch.rpm
        - http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_facts.distribution_version }}.noarch.rpm
        - https://downloads.sourceforge.net/project/mscorefonts2/rpms/msttcore-fonts-installer-2.6-1.noarch.rpm
      become: true
      tags: rpmfusion
      when: not file_exists.stat.exists

    - name: Install VSCodium
      shell: |
        rpm --import https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg
        printf "[gitlab.com_paulcarroty_vscodium_repo]\nname=gitlab.com_paulcarroty_vscodium_repo\nbaseurl=https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/repos/rpms/\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg" |sudo tee -a /etc/yum.repos.d/vscodium.repo
        dnf update
        dnf install codium -y
      become: true
      tags: codium


    - name: Install Flathub
      flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
        method: user
      tags: flathub

    - name: Install Programs (Generic Utilities)
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - etckeeper
        - flatpak
        - cabextract
        - lzip
        - p7zip
        - p7zip-plugins
        - xdotool
        - wmctrl
      become: true
      tags: term_pkg

      # See: https://github.com/ansible/ansible/issues/54949
    - name: Configure etckeeper.conf
      lineinfile:
        path: /etc/etckeeper/etckeeper.conf
        regexp: ^GIT_COMMIT_OPTIONS=.*
        line: GIT_COMMIT_OPTIONS="-q"
      become: true
      tags: term_pkg

    - name: Initialize Etckeeper
      shell: '{{ item }}'
      with_items:
        - etckeeper init
        - etckeeper commit "Initial Commit"
      ignore_errors: true
      become: true
      tags: term_pkg

    - name: Install Programs (Media Utilities)
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - gstreamer1-vaapi
        - gstreamer1-libav
        - gstreamer1-plugins-good
        - gstreamer1-plugins-good-extras
        - gstreamer1-plugins-ugly
        - gstreamer1-plugins-ugly-free
        - gstreamer1-plugins-bad-free
        - gstreamer1-plugins-bad-nonfree
        - gstreamer1-plugins-bad-freeworld
        - gstreamer1-plugins-base-tools
        - ffmpeg
        - ffmpeg-libs
        - libva-devel
        - intel-media-driver
        - libva-intel-driver
        - libva-intel-hybrid-driver
        - libva-utils
        - libva-vdpau-driver
        - libvdpau-va-gl
        - compat-ffmpeg28
        - compat-ffmpeg28-devel
        - gvfs-fuse
      become: true
      tags: media

    - name: Install Programs (GUI Programs)
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - eog
        - evince
        - evolution-data-server
        - flatpak
        - gdm
        - gnome-keyring
        - gnome-menus
        - gnome-screenshot
        - gnome-shell
        - gnome-terminal
        - gnome-tweak-tool
        - gigolo
        - mpv
        - nautilus
        - redhat-menus
        - libnotify
        - libreoffice-draw
        - telegram-desktop
        - keepassxc
        - gparted
        - gimp
        - syncthing
        - syncthing-gtk
        - VirtualBox
        - akmod-VirtualBox
      become: true
      tags: gui

    - name: Install Programs (Terminal Programs)
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - vim
        - vim-enhanced
        - vim-X11
        - tmux
        - xclip
        - ripgrep
        - wmctrl
        - xdotool
        - zsh
      become: true
      tags: term

    - name: install the 'Development tools' package group
      dnf:
        name: '{{ item }}'
        state: present
      with_items:
        - '@C Development Tools and Libraries'
        - '@Development tools'
      become: true
      tags: devel

    - name: Install Programs (Programming Packages)
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - clang
        - checkstyle
        - golang
        - golint
        - npm
        - nodejs
        - ShellCheck
        - ncurses-compat-libs
        - boost-devel
        - python2
        - python2-devel
        - python3
        - python3-devel
        - cmake
        - ctags
        - ctags-etags
        - global-ctags
        - libxml2
      become: true
      tags: devel

      # LSP
      # c/cpp clangd -> clang-tools-extra
      # java -> https://download.eclipse.org/jdtls/milestones/?d
      # golang -> go-langserver
      # rust -> rls
      # python -> pyls
      #
      # Linters
      # shellcheck, checkbashisms
      # jsonlint
      # ansible-lint
      # yamllint
      #
      # Formatters:
      # jsonlint -> demjson
      # autopep8
      # beautysh
      # clang-format -> clang
    - name: Install Programs (Programming Packages) - pip
      pip:
        name: '{{ item[1] }}'
        state: present
        executable: '{{ item[0] }}'
      with_nested:
        - [pip-2, pip-3]
        - [setuptools, pylint, jedi, pyflakes, pycodestyle, autopep8, mccabe, rope, beautysh, demjson, yamllint, ansible-lint]
      become: true
      tags: devel

    - name: Ensure {{ ansible_env.HOME }}/Programs Exists
      file:
        path: '{{ ansible_env.HOME }}/Programs'
        state: directory
      tags: programs

    - name: Setup GOLANG environment
      shell: |
        export GOPATH={{ ansible_env.HOME }}/.local/go
        cd $(mktemp -d); go mod init tmp; go get -u moul.io/assh
        cd $(mktemp -d); go mod init tmp; go get -u github.com/jingweno/ccat
      args:
        executable: /bin/bash
      tags: programs

    - name: Only Office (Repo)
      yum_repository:
        name: onlyoffice
        baseurl: http://download.onlyoffice.com/repo/centos/main/noarch/
        description: onlyoffice repo
        gpgcheck: no
        enabled: true
        file: onlyoffice
      become: true
      tags: programs

    - name: Only Office (Links)
      file:
        src: /usr/lib64/libcurl.so.4.5.0
        dest: /usr/lib64/libcurl-gnutls.so.4
        state: link
        force: true
      tags: programs
      become: true

    - name: Only Office (Install)
      package:
        name: onlyoffice-desktopeditors
        state: present
      become: true
      tags: programs

    - name: Libinput Gestures (Clone)
      git:
        repo: https://github.com/bulletmark/libinput-gestures
        dest: '{{ ansible_env.HOME }}/Programs/libinput-gestures'
        version: master
        update: true
      tags: programs

    - name: Libinput Gestures (Group and Dependency)
      shell: '{{ item }}'
      with_items:
        - usermod -a -G input luca-linux
        - dnf install -y systemd-devel libinput-devel
        - cd {{ ansible_env.HOME }}/Programs/libinput-gestures; make install
      become: true
      tags: programs

    - name: Libinput Gestures (Start and Autorun)
      shell: '{{ item }}'
      with_items:
        - libinput-gestures-setup autostart
        - libinput-gestures-setup start
      tags: programs

    - name: FSTrim Enable
      systemd:
        name: fstrim.timer
        state: started
        enabled: true
      become: true

    - name: Install Power Management (Laptop)
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - powertop
        - msr-tools
        - tlp
        - tlp-rdw
      become: true

    - name: Powertop Enable
      systemd:
        name: powertop.service
        state: started
        enabled: true
      become: true

    - name: Tlp Enable
      systemd:
        name: tlp.service
        state: started
        enabled: true
      become: true

    - name: Set sysctl variables
      sysctl:
        name: '{{ item.name }}'
        value: '{{ item.value }}'
        sysctl_set: true
        state: present
        reload: true
      with_items:
        - { name: vm.laptop_mode, value: 5 }
        - { name: kernel.nmi_watchdog, value: 0 }
        - { name: vm.swappiness, value: 5 }
        - { name: vm.oom_kill_allocating_task, value: 1 }
        - { name: vm.block_dump, value: 1 }
        - { name: vm.vfs_cache_pressure, value: 100 }
        - { name: vm.dirty_ratio, value: 90 }
        - { name: vm.dirty_background_ratio, value: 50 }
        - { name: vm.dirty_writeback_centisecs, value: 60000 }
        - { name: vm.dirty_expire_centisecs, value: 60000 }
        - { name: fs.inotify.max_user_watches, value: 524288 }
      become: true

    - name: Check if Crypttab discard is enabled
      shell: grep discard /etc/crypttab
      register: test_grep
      become: true
      ignore_errors: true
    - name: Enable Discard Crypttab
      shell: sed -i 's/none/none discard/g' /etc/crypttab
      become: true
      when: test_grep.rc == 1

    - name: Check if fstab discard is enabled
      shell: grep "discard" /etc/crypttab
      register: test_grep
      become: true
      ignore_errors: true
    - name: Enable Discard Fstab
      shell: sed -i 's/defaults/defaults,discard/g' /etc/fstab
      become: true
      when: test_grep.rc == 1

    - name: Update fstab file with tmpfs /tmp
      lineinfile:
        path: /etc/fstab
        regexp: tmpfs /tmp tmpfs
        line: tmpfs /tmp tmpfs defaults,lazytime,noatime,nodiratime 0 0
        state: present
        backup: true
      become: true

    - name: Enable discard lvm
      shell: sed -i 's/issue_discards = 0/issue_discards = 1/g' /etc/lvm/lvm.conf
      become: true

    - name: Blacklist unused kernel module
      kernel_blacklist:
        name: intel_powerclamp
        state: present
      become: true

    - name: Check if /etc/modprobe.d/i915.conf exists
      stat:
        path: /etc/modprobe.d/i915.conf
      register: file_exists
    - name: Set i915 driver options
      shell: echo "options i915 disable_power_well=0 enable_dc=2 enable_psr=3 enable_rc6=7 enable_fbc=1 powersave=1 semaphores=1" > /etc/modprobe.d/i915.conf
      become: true
      when: not file_exists.stat.exists

    - name: Check if /etc/modprobe.d/snd_hda_intel.conf exists
      stat:
        path: /etc/modprobe.d/snd_hda_intel.conf
      register: file_exists
    - name: Set Intel HDA driver options
      shell: echo 'options snd_hda_intel power_save_controlle=Y power_save=1' > /etc/modprobe.d/snd_hda_intel.conf
      become: true
      when: not file_exists.stat.exists

    - name: Check if /etc/modprobe.d/e1000e.conf exists
      stat:
        path: /etc/modprobe.d/e1000e.conf
      register: file_exists
    - name: Set Intel ETH driver options
      shell: echo 'options e1000e SmartPowerDownEnable=1' > /etc/modprobe.d/e1000e.conf
      become: true
      when: not file_exists.stat.exists

    - name: Check if /etc/modprobe.d/iwlwifi.conf exists
      stat:
        path: /etc/modprobe.d/iwlwifi.conf
      register: file_exists
    - name: Set Intel Wifi driver options
      shell: echo 'options iwlwifi power_save=Y power_level=5 iwlmvm power_scheme=3' > /etc/modprobe.d/iwlwifi.conf
      become: true
      when: not file_exists.stat.exists

    - name: Check Grub Flags are deployed
      shell: |
        grep "nmi_watchdog=0 pcie_aspm.policy=powersupersave pcie_aspm=force drm.debug=0 drm.vblankoffdelay=1 scsi_mod.use_blk_mq=1 mmc_mod.use_blk_mq=1 mitigations=off" /etc/default/grub
      register: test_grep
      become: true
      ignore_errors: true
      tags: grub
    - name: Deploy Grub Flags
      shell: |
        sed -i 's/quiet/quiet nmi_watchdog=0 pcie_aspm.policy=powersupersave pcie_aspm=force drm.debug=0 drm.vblankoffdelay=1 scsi_mod.use_blk_mq=1 mmc_mod.use_blk_mq=1 mitigations=off/g' /etc/default/grub
      become: true
      when: test_grep.rc == 1
      tags: grub

    - name: Update Grub and Initramfs
      shell: '{{ item }}'
      with_items:
        - grub2-mkconfig -o $(find /boot -name "grub.cfg" -print | head -n 1)
        - dracut --force --regenerate-all -v
      become: true

    - name: Check if /etc/modules-load.d/iosched.conf exists
      stat:
        path: /etc/modules-load.d/iosched.conf
      register: file_exists
    - name: Load IO Schedulers at boot
      shell: echo {{ item }} >> /etc/modules-load.d/iosched.conf
      with_items:
        - bfq
        - mq-deadline
        - kyber-iosched
      become: true
      when: not file_exists.stat.exists

    - name: Check if /etc/udev/rules.d/powersave.rules exists
      stat:
        path: /etc/udev/rules.d/powersave.rules
      register: file_exists
    - name: Set UDev Rules
      shell: echo {{ item }} >> /etc/udev/rules.d/powersave.rules
      with_items:
        - ACTION=="add", SUBSYSTEM=="pci", ATTR{power/control}="auto"
        - ACTION=="add", SUBSYSTEM=="ahci", ATTR{power/control}="auto"
        - ACTION=="add", SUBSYSTEM=="scsi_host", KERNEL=="host*", ATTR{link_power_management_policy}="min_power"
        - ACTION=="add", SUBSYSTEM=="scsi", ATTR{power/control}="auto"
        - ACTION=="add", SUBSYSTEM=="acpi", ATTR{power/control}="auto"
        - ACTION=="add", SUBSYSTEM=="block", ATTR{power/control}="auto"
        - ACTION=="add", SUBSYSTEM=="workqueue", ATTR{power/control}="auto"
        - ACTION=="add", SUBSYSTEM=="i2c", ATTR{power/control}="auto"
        - ACTION=="add", SUBSYSTEM=="net", KERNEL=="enp*", RUN+="/usr/sbin/ethtool -s %k wol d"
        - ACTION=="add", SUBSYSTEM=="net", KERNEL=="wlp*", RUN+="/usr/sbin/ethtool -s %k wol d"
        - ACTION=="add", SUBSYSTEM=="net", KERNEL=="wlp*", RUN+="/usr/sbin/iw dev %k set power_save on"
        - ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/read_ahead_kb}="65536"
        - ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/rotational}=="0", ATTR{queue/scheduler}="bfq"
        - ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/rotational}=="0", ATTR{queue/iosched/low_latency}="1"
        - ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/rotational}=="1", ATTR{queue/scheduler}="bfq"
        - ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/rotational}=="1", ATTR{queue/iosched/low_latency}="1"
        - ACTION=="add|change", KERNEL=="sd[a-z]", RUN+="/usr/sbin/hdparm -B 1 /dev/%k"
      become: true
      when: not file_exists.stat.exists

#echo '
#[Unit]
#Description=Keep a tunnel to homeserver01 open
#After=network-online.target


#[Service]
#Type=forking
#User=luca-linux
#ExecStart=/usr/bin/autossh -M 20000 -N -f -o "ServerAliveInterval 30" -o "ServerAliveCountMax 3" -o "ExitOnForwardFailure=yes" -F /dev/null -i /home/luca-linux/.ssh/id_rsa -R 0.0.0.0:9300:localhost:22 -p 50362 -l root luca-lan.privatedns.org

#ExecStop=/usr/bin/killall -9 autossh
#Restart=always

#[Install]
#WantedBy=multi-user.target
#' | sudo tee /etc/systemd/system/autossh.service

# echo 'Section "InputClass"
#         Identifier "libinput pointer catchall"
#         MatchIsPointer "on"
#         MatchDevicePath "/dev/input/event*"
#         Driver "libinput"
#         Option "ScrollMethod" "button"
#         Option "ScrollButton" "2"
# EndSection' | sudo tee -a  /usr/share/X11/xorg.conf.d/40-libinput.conf

#     ######## BBSWITCH ################
#     sudo dnf copr enable chenxiaolong/bumblebee
#     echo "blacklist nouveau
#     blacklist lbm-nouveau
#     alias nouveau off
#     alias lbm-nouveau off
#     options nouveau modeset=0" | sudo tee /etc/modprobe.d/nouveau_blacklist.conf
#     echo "options bbswitch load_state=0 unload_state=0" | sudo tee /etc/modprobe.d/bbswitch.conf
#     echo "bbswitch" | sudo tee /etc/modules-load.d/bbswitch.conf
#     sudo mv /usr/lib/systemd/system/switcheroo-control.service /usr/lib/systemd/system/switcheroo-control.service.bak
#
#     ####### SDK Android ############
#       sdkmanager --install "platforms;android-28"
#       sdkmanager --install "extras;android;m2repository"
#       sdkmanager --install "build-tools;28.0.3"
#       sdkmanager --install "platform-tools"
