# main.yml
---

- name: Install rpmfusion
  dnf:
    state: present
    disable_gpg_check: yes
    name: "{{ rpmfusion_packages }}"
  become: yes
  when: ansible_os_family == "RedHat"
  tags: rpmfusion,become

- name: Enable powertools
  command: "dnf config-manager --set-enabled powertools"
  become: yes
  when: ansible_distribution == "CentOS"
  tags: rpmfusion,become

- name: Dnf tweaks
  blockinfile:
    path: /etc/dnf/dnf.conf
    create: yes
    block: |
      deltarpm=True
      fastestmirror=True
      install_weak_deps=False
      max_parallel_downloads=10
    mode: 0644
  become: yes
  when: ansible_os_family == "RedHat"
  tags: dnf,become

- name: Apt no recommends
  blockinfile:
    path: /etc/apt/apt.conf.d/01norecommend
    create: yes
    block: |
      APT::Install-Recommends "0";
      APT::Install-Suggests "0";
    mode: 0644
  become: yes
  when: ansible_os_family == "Debian"
  tags: apt,become

- name: Remove snaps
  apt:
    state: absent
    purge: yes
    name: snapd
  become: yes
  when: ansible_distribution == "Ubuntu"
  tags: snapd,become

- name: Blacklist Snaps
  blockinfile:
    path: /etc/apt/preferences.d/nosnap.pref
    create: yes
    block: |
      Package: snapd
      Pin: release a=*
      Pin-Priority: -10
    mode: 0644
  become: yes
  when: ansible_distribution == "Ubuntu"
  tags: snapd,become

- name: Backports Enable
  blockinfile:
    path: /etc/apt/sources.list
    create: yes
    block: |
      deb http://deb.debian.org/debian bullseye-backports main contrib non-free
    mode: 0644
  become: yes
  when: ansible_distribution == "Debian"
  tags: backports,become

- name: Backports Priority
  blockinfile:
    path: /etc/apt/preferences.d/backports
    create: yes
    block: |
      Package: *
      Pin: release a=bullseye-backports
      Pin-Priority: 500
    mode: 0644
  become: yes
  when: ansible_distribution == "Debian"
  tags: backports,become

- name: Remove bloat packages
  package:
    state: absent
    name: "{{ debloat_pkg }}"
  become: yes
  tags: debloat,become

- name: Autoremove
  command: "{{ pkg_mngr }} autoremove -y"
  become: yes
  register: pkg_output
  changed_when: pkg_output.stdout_lines|length > 4
  tags: debloat,become

- name: Install Programs (Archive Utilities)
  package:
    state: present
    name: "{{ archive_packages }}"
  become: yes
  tags: archives,become

- name: Install Podman Packages
  include: podman.yml
  when: not is_toolbox
  become: yes
  tags: podman,become

- name: Setup toolbox
  include: toolbox.yml
  when: not is_toolbox
  tags: toolbox

- name: Install Main Packages
  include: packages.yml
  when: not is_toolbox
  tags: packages

- name: Install CLI Packages
  include: terminal.yml
  when: (toolbox_enabled|bool == false) or is_toolbox
  tags: terminal
