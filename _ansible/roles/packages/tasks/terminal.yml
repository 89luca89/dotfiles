# my_apps.yml
---

- name: Install Programs (Programming Packages)
  package:
    state: present
    name: "{{ terminal_packages }}"
  become: yes
  tags: terminal,become

- name: Install Programs (python)
  package:
    state: present
    name: "{{ python_packages }}"
  become: yes
  tags: terminal,python,become

- name: Install Programs (PIP Packages) - pip
  shell: 'pip3 install --user {{ item }} | sed "s/Requirement already satisfied.*//g"'
  register: pip_output
  changed_when: pip_output.stdout_lines|length > 0
  with_items: "{{ python_modules }}"
  tags: terminal,python

- name: Install Programs (golang)
  package:
    state: present
    name: "{{ golang_packages }}"
  become: yes
  tags: terminal,golang,become

- name: Check that golang exists
  stat:
    path: "{{ ansible_env.HOME }}/.local/go/bin/gopls"
  register: golang
  tags: terminal,golang

- name: Install Programs (Programming Packages) - golang
  command: "go get -u {{ item }}"
  with_items: "{{ golang_modules }}"
  environment:
    GOPATH: "{{ ansible_env.HOME }}/.local/go"
  when: not golang.stat.exists
  tags: terminal,golang

- name: Install Programs (Programming Packages) - golangci-lint
  shell: |
    curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.27.0
  environment:
    GOPATH: "{{ ansible_env.HOME }}/.local/go"
  when: not golang.stat.exists
  tags: terminal,golang

- name: Install Programs (Programming Packages) - gopls
  command: "go get golang.org/x/tools/gopls@latest"
  environment:
    GO111MODULE: "on"
    GOPATH: "{{ ansible_env.HOME }}/.local/go"
  when: not golang.stat.exists
  tags: terminal,golang
